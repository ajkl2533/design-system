# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CD

on:
  push:

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['14', '16', '18']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache yarn pnp files
        uses: actions/cache@v3
        id: cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('**/yarn.lock', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node }}-${{ env.cache-name }}-
            ${{ runner.os }}-node-${{ env.cache-name }}-
            ${{ runner.os }}-node-
            ${{ runner.os }}-

      - name: Install Packages
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --immutable

      - name: Run Unit Tests
        run: yarn test

  types:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache yarn pnp files
        uses: actions/cache@v3
        id: cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-16-${{ hashFiles('**/yarn.lock', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-16-${{ env.cache-name }}-
            ${{ runner.os }}-node-${{ env.cache-name }}-
            ${{ runner.os }}-node-
            ${{ runner.os }}-

      - name: Install Packages
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --immutable

      - name: Run Types Check
        run: yarn types

  visual-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache yarn pnp files
        uses: actions/cache@v3
        id: cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-16-${{ hashFiles('**/yarn.lock', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-16-${{ env.cache-name }}-
            ${{ runner.os }}-node-${{ env.cache-name }}-
            ${{ runner.os }}-node-
            ${{ runner.os }}-

      - name: Install Packages
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --immutable

      - name: Cache storybook build
        id: storybook-build-cache
        uses: actions/cache@v3
        with:
          path: storybook-static
          key: ${{ hashFiles('**/yarn.lock', '**/package.json', 'src/**', '!.storybook/image-snapshots/**' ,'.storybook/**') }}

      - name: Build Storybook
        if: steps.storybook-build-cache.outputs.cache-hit != 'true'
        run: yarn storybook:build

      - name: Run Visual Regressions
        run: yarn test:storybook:visual:ci

      - name: Tar artifacts
        if: failure()
        run: tar -cvf visual-test-reports.tar .storybook/image-snapshots

      - name: Archive visual artifacts
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: visual-test-reports
          path: visual-test-reports.tar

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache yarn pnp files
        uses: actions/cache@v3
        id: cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-16-${{ hashFiles('**/yarn.lock', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-16-${{ env.cache-name }}-
            ${{ runner.os }}-node-${{ env.cache-name }}-
            ${{ runner.os }}-node-
            ${{ runner.os }}-

      - name: Install Packages
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --immutable

      - name: Run Lint
        run: yarn lint

  lint-css:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache yarn pnp files
        uses: actions/cache@v3
        id: cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-16-${{ hashFiles('**/yarn.lock', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-16-${{ env.cache-name }}-
            ${{ runner.os }}-node-${{ env.cache-name }}-
            ${{ runner.os }}-node-
            ${{ runner.os }}-

      - name: Install Packages
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --immutable

      - name: Run Lint
        run: yarn lint:css

  betterer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache yarn pnp files
        uses: actions/cache@v1
        id: cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-16-${{ hashFiles('**/yarn.lock', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-16-${{ env.cache-name }}-
            ${{ runner.os }}-node-
            ${{ runner.os }}-

      - name: Install Packages
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --immutable

      - name: Run Betterer
        run: yarn betterer:ci

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['14', '16', '18']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache yarn pnp files
        uses: actions/cache@v3
        id: cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('**/yarn.lock', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node }}-${{ env.cache-name }}-
            ${{ runner.os }}-node-${{ env.cache-name }}-
            ${{ runner.os }}-node-
            ${{ runner.os }}-

      - name: Install Packages
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --immutable

      - name: Cache build
        id: library-build-cache
        uses: actions/cache@v3
        with:
          path: build
          key: node-${{ matrix.node }}-${{ hashFiles('**/yarn.lock', '**/package.json', '**/rollup.config.js', 'src/**') }}

      - name: Build Step
        run: yarn build

      - uses: actions/upload-artifact@v2
        with:
          name: bundle-stats-${{ matrix.node }}
          path: stats

  build-and-publish:
    if: "github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/alpha') && !contains(github.event.head_commit.message, 'chore(release):')"
    needs: [unit-tests, visual-tests, types, lint, lint-css, betterer, build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          registry-url: 'https://registry.npmjs.org'
          scope: '@securityscorecard'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache yarn pnp files
        uses: actions/cache@v3
        id: cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-16-${{ hashFiles('**/yarn.lock', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-16-${{ env.cache-name }}-
            ${{ runner.os }}-node-${{ env.cache-name }}-
            ${{ runner.os }}-node-
            ${{ runner.os }}-

      - name: Install Packages
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --immutable

      - name: Cache build
        id: library-build-cache
        uses: actions/cache@v3
        with:
          path: build
          key: node-16-${{ hashFiles('**/yarn.lock', '**/package.json', '**/rollup.config.js', 'src/**') }}

      - name: Build Step
        if: steps.library-build-cache.outputs.cache-hit != 'true'
        run: yarn build

      - name: Run Semantic Release
        run: yarn semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_REGISTRY: https://registry.npmjs.org:8443/
